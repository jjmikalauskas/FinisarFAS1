
# Copyright 2009 Rudolph Technologies, Inc. All Rights Reserved.
# This software is provided under license and may only be used in
# accordance with the terms of the respective license agreements
# of the owners of the same software, which include, but are not
# limited to, Rudolph Technologies, Inc. Where applicable, refer
# to on-line license agreements provided with the software.

#! /bin/sh
# the next line restarts using wish8.5 \
exec wish8.5 "$0" "$@"

# interface generated by SpecTcl version 1.1 from /vob/workscell/ashl/src/astk/aimcfg.ui
#   root     is the parent window for this user interface

proc aimcfg_ui {root args} {

	# this treats "." as a special case

	if {$root == "."} {
	    set base ""
	} else {
	    set base $root
	}
    
	label $base.label#7 \
		-text {Only Show:}

	radiobutton $base.radiobutton#6 \
		-text {Show All} \
		-value * \
		-variable aim_options(onlyshow)

	entry $base.entry#3 \
		-cursor {} \
		-textvariable aim_options(onlyshow)

	label $base.label#13 \
		-text {(Separate multiple filters with :)}

	label $base.label#1 \
		-text {Text Editor}

	radiobutton $base.radiobutton#1 \
		-text anp \
		-value anp \
		-variable aim_options(texteditor)

	radiobutton $base.radiobutton#2 \
		-text vi \
		-value {xterm -e vi} \
		-variable aim_options(texteditor)

	entry $base.entry#1 \
		-cursor {} \
		-textvariable aim_options(texteditor)

	label $base.label#4 \
		-text {Application Editor:}

	radiobutton $base.radiobutton#3 \
		-text srve \
		-value srve \
		-variable aim_options(sueditor)

	radiobutton $base.radiobutton#4 \
		-text anp \
		-value anp \
		-variable aim_options(sueditor)

	radiobutton $base.radiobutton#5 \
		-text vi \
		-value {xterm -e vi} \
		-variable aim_options(sueditor)

	entry $base.entry#2 \
		-cursor {} \
		-textvariable aim_options(sueditor)

	label $base.label#12 \
		-text {DV Viewer:}

	radiobutton $base.radiobutton#10 \
		-text dvb \
		-value {dvb -f} \
		-variable aim_options(dvviewer)

	radiobutton $base.radiobutton#11 \
		-text anp \
		-value anp \
		-variable aim_options(dvviewer)

	radiobutton $base.radiobutton#12 \
		-text vi \
		-value {xterm -e vi} \
		-variable aim_options(dvviewer)

	entry $base.entry#9 \
		-cursor {} \
		-textvariable aim_options(dvviewer)

	label $base.label#8 \
		-text {Browser Command:}

	radiobutton $base.radiobutton#7 \
		-text firefox \
		-value firefox \
		-variable aim_options(browsercmd)

	entry $base.entry#4 \
		-cursor {} \
		-textvariable aim_options(browsercmd)

	label $base.label#3 \
		-text {Dialog at Server
Launcher Save:}

	checkbutton $base.checkbutton#2 \
		-variable aim_options(storedialog)

	label $base.label#5 \
		-text {Command Completion:}

	checkbutton $base.checkbutton#5 \
		-variable aim_options(cmdcompletion)

	label $base.label#6 \
		-text {Show Transient Clients:}

	checkbutton $base.checkbutton#6 \
		-variable aim_options(showclients)

	label $base.label#9 \
		-text {Background Color:}

	radiobutton $base.radiobutton#8 \
		-text {AutoShell Blue} \
		-value #2985B6 \
		-variable aim_options(background)

	button $base.button#2 \
		-command {choose_color background "AC Background Color"} \
		-text Choose

	entry $base.entry#7 \
		-cursor {} \
		-textvariable aim_options(background)

	label $base.label#10 \
		-text {Foreground Color:}

	radiobutton $base.radiobutton#9 \
		-text White \
		-value white \
		-variable aim_options(foreground)

	button $base.button#3 \
		-command {choose_color foreground "AC Foreground Color"} \
		-text Choose

	entry $base.entry#8 \
		-cursor {} \
		-textvariable aim_options(foreground)

	label $base.label#11 \
		-text {Non-developer mode:}

	checkbutton $base.checkbutton#7 \
		-variable aim_options(adminmode)

	label $base.label#14 \
		-text {(Takes effect at AC restart)}

	label $base.label#15 \
		-text {Xclipboard At Startup:}

	checkbutton $base.checkbutton#8 \
		-variable aim_options(xclipboard)
		
	label $base.label#16 \
		-text {Remember Window Placement:}

	checkbutton $base.checkbutton#16 \
		-variable aim_options(rememberwindow)

	label $base.label#17 \
		-text {Persist Options:}

	checkbutton $base.checkbutton#9 \
		-variable aim_options(persistoptions)

	button $base.button#4 \
		-command config_user_icons \
		-highlightthickness 2 \
		-padx 10 \
		-text {Configure Toolbars}

	button $base.button#1 \
		-command "save_options; apply_color_scheme; destroy $root; refresh_serverlist" \
		-padx 32 \
		-text OK


	# Geometry management

	grid $base.label#7 -in $root	-row 1 -column 1  \
		-sticky e
	grid $base.radiobutton#6 -in $root	-row 1 -column 2  \
		-columnspan 3 \
		-sticky w
	grid $base.entry#3 -in $root	-row 1 -column 5  \
		-columnspan 2 \
		-sticky ew
	grid $base.label#13 -in $root	-row 2 -column 5  \
		-columnspan 2
	grid $base.label#1 -in $root	-row 3 -column 1  \
		-sticky e
	grid $base.radiobutton#1 -in $root	-row 3 -column 2  \
		-columnspan 2 \
		-sticky w
	grid $base.radiobutton#2 -in $root	-row 3 -column 4  \
		-sticky w
	grid $base.entry#1 -in $root	-row 3 -column 5  \
		-columnspan 2 \
		-sticky ew
	grid $base.label#4 -in $root	-row 4 -column 1  \
		-sticky e
	grid $base.radiobutton#3 -in $root	-row 4 -column 2  \
		-columnspan 2 \
		-sticky w
	grid $base.radiobutton#4 -in $root	-row 4 -column 4  \
		-sticky w
	grid $base.radiobutton#5 -in $root	-row 4 -column 5  \
		-sticky w
	grid $base.entry#2 -in $root	-row 4 -column 6  \
		-sticky ew
	grid $base.label#12 -in $root	-row 5 -column 1  \
		-sticky e
	grid $base.radiobutton#10 -in $root	-row 5 -column 2  \
		-columnspan 2 \
		-sticky w
	grid $base.radiobutton#11 -in $root	-row 5 -column 4  \
		-sticky w
	grid $base.radiobutton#12 -in $root	-row 5 -column 5  \
		-sticky w
	grid $base.entry#9 -in $root	-row 5 -column 6  \
		-sticky ew
	grid $base.label#8 -in $root	-row 6 -column 1  \
		-sticky e
	grid $base.radiobutton#7 -in $root	-row 6 -column 2  \
		-columnspan 3 \
		-sticky w
	grid $base.entry#4 -in $root	-row 6 -column 5  \
		-columnspan 2 \
		-sticky ew
	grid $base.label#3 -in $root	-row 7 -column 1  \
		-sticky e
	grid $base.checkbutton#2 -in $root	-row 7 -column 2  \
		-sticky w
	grid $base.label#5 -in $root	-row 8 -column 1  \
		-sticky e
	grid $base.checkbutton#5 -in $root	-row 8 -column 2  \
		-sticky w
	grid $base.label#6 -in $root	-row 9 -column 1 
	grid $base.checkbutton#6 -in $root	-row 9 -column 2  \
		-sticky w
	grid $base.label#9 -in $root	-row 10 -column 1  \
		-sticky ne
	grid $base.radiobutton#8 -in $root	-row 10 -column 2  \
		-columnspan 3 \
		-sticky nw
	grid $base.button#2 -in $root	-row 10 -column 5 
	grid $base.entry#7 -in $root	-row 10 -column 6  \
		-sticky ew
	grid $base.label#10 -in $root	-row 11 -column 1  \
		-sticky ne
	grid $base.radiobutton#9 -in $root	-row 11 -column 2  \
		-columnspan 3 \
		-sticky nw
	grid $base.button#3 -in $root	-row 11 -column 5 
	grid $base.entry#8 -in $root	-row 11 -column 6  \
		-sticky ew
	grid $base.label#11 -in $root	-row 12 -column 1  \
		-sticky e
	grid $base.checkbutton#7 -in $root	-row 12 -column 2  \
		-sticky w
	grid $base.label#14 -in $root	-row 12 -column 3  \
		-columnspan 4 \
		-sticky w
	grid $base.label#15 -in $root	-row 13 -column 1 \
		-sticky e
	grid $base.checkbutton#8 -in $root	-row 13 -column 2 
	grid $base.label#16 -in $root	-row 14 -column 1 \
		-sticky e
	grid $base.checkbutton#16 -in $root	-row 14 -column 2
	grid $base.label#17 -in $root	-row 15 -column 1 \
		-sticky e
	grid $base.checkbutton#9 -in $root	-row 15 -column 2
	grid $base.button#4 -in $root	-row 16 -column 1  \
		-columnspan 4 \
		-pady 4
	grid $base.button#1 -in $root	-row 16 -column 5  \
		-columnspan 2 \
		-pady 4

	# Resize behavior management

	grid rowconfigure $root 1 -weight 0 -minsize 30
	grid rowconfigure $root 2 -weight 0 -minsize 30
	grid rowconfigure $root 3 -weight 0 -minsize 15
	grid rowconfigure $root 4 -weight 0 -minsize 30
	grid rowconfigure $root 5 -weight 0 -minsize 30
	grid rowconfigure $root 6 -weight 0 -minsize 30
	grid rowconfigure $root 7 -weight 0 -minsize 15
	grid rowconfigure $root 8 -weight 0 -minsize 15
	grid rowconfigure $root 9 -weight 0 -minsize 30
	grid rowconfigure $root 10 -weight 0 -minsize 15
	grid rowconfigure $root 11 -weight 0 -minsize 15
	grid rowconfigure $root 12 -weight 0 -minsize 30
	grid rowconfigure $root 13 -weight 0 -minsize 30
	grid rowconfigure $root 14 -weight 0 -minsize 30
	grid rowconfigure $root 15 -weight 0 -minsize 15
	grid rowconfigure $root 16 -weight 0 -minsize 15
	grid columnconfigure $root 1 -weight 0 -minsize 15
	grid columnconfigure $root 2 -weight 0 -minsize 2
	grid columnconfigure $root 3 -weight 0 -minsize 30
	grid columnconfigure $root 4 -weight 0 -minsize 2
	grid columnconfigure $root 5 -weight 0 -minsize 2
	grid columnconfigure $root 6 -weight 1 -minsize 15
# additional interface code
global tcl_platform
if { [info exists tcl_planform] && $tcl_platform(platform) == "windows" } {
	destroy $base.checkbutton#8
	destroy $base.label#15
}


# end additional interface code

}


# Allow interface to be run "stand-alone" for testing

catch {
    if [info exists embed_args] {
	# we are running in the plugin
	aimcfg_ui .
    } else {
	# we are running in stand-alone mode
	if {$argv0 == [info script]} {
	    wm title . "Testing aimcfg_ui"
	    aimcfg_ui .
	}
    }
}
