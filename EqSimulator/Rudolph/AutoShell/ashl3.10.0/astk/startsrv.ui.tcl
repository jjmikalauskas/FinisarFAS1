
# Copyright 2009 Rudolph Technologies, Inc. All Rights Reserved.
# This software is provided under license and may only be used in
# accordance with the terms of the respective license agreements
# of the owners of the same software, which include, but are not
# limited to, Rudolph Technologies, Inc. Where applicable, refer
# to on-line license agreements provided with the software.

#! /bin/sh
# the next line restarts using wish \
exec wish "$0" "$@"

# interface generated by SpecTcl version 1.1 from /home/hcamp/code/mtc/ashl/astk/startsrv.ui
#   root     is the parent window for this user interface

proc startsrv_ui {root args} {

	# this treats "." as a special case

	if {$root == "."} {
	    set base ""
	} else {
	    set base $root
	}
    
	frame $base.dropframe

	label $base.label#2 \
		-text {Server Name:}

	label $base.label#7 \
		-text User:

	entry $base.username \
		-textvariable "aim_srvstart($root,username)" \
		-width 32

	label $base.label#8 \
		-text {Working Directory:}

	entry $base.workdir \
		-textvariable "aim_srvstart($root,workdir)"

	button $base.button#11 \
		-command "ss_get_dir $root workdir" \
		-padx 3 \
		-text Browse...
	catch {
		$base.button#11 configure \
			-font -*-Helvetica-Bold-R-Normal-*-*-120-*-*-*-*-*-*
	}

	label $base.label#1 \
		-text Executable:

	entry $base.executable \
		-textvariable "aim_srvstart($root,executable)"

	button $base.button#1 \
		-command "ss_get_open_file $root executable" \
		-padx 3 \
		-text Browse...
	catch {
		$base.button#1 configure \
			-font -*-Helvetica-Bold-R-Normal-*-*-120-*-*-*-*-*-*
	}

	label $base.label#3 \
		-text {Startup File:}

	entry $base.startup \
		-textvariable "aim_srvstart($root,startup)"

	button $base.button#3 \
		-command "ss_get_open_file $root startup {{\"Startup Files\" {.xsu .su}}}" \
		-padx 3 \
		-text Browse...
	catch {
		$base.button#3 configure \
			-font -*-Helvetica-Bold-R-Normal-*-*-120-*-*-*-*-*-*
	}

	button $base.button#9 \
		-command "launch_su_editor $root" \
		-text Edit
	catch {
		$base.button#9 configure \
			-font -*-Helvetica-Bold-R-Normal-*-*-120-*-*-*-*-*-*
	}

	label $base.label#4 \
		-text {TCL Startup File:}

	entry $base.tclstartup \
		-textvariable "aim_srvstart($root,tclstartup)"

	button $base.button#2 \
		-command "ss_get_open_file $root tclstartup {{\"TCL Startup File\" .tcl}}" \
		-padx 3 \
		-text Browse...
	catch {
		$base.button#2 configure \
			-font -*-Helvetica-Bold-R-Normal-*-*-120-*-*-*-*-*-*
	}

	button $base.button#10 \
		-command "launch_tcl_editor $root" \
		-text Edit
	catch {
		$base.button#10 configure \
			-font -*-Helvetica-Bold-R-Normal-*-*-120-*-*-*-*-*-*
	}

	label $base.label#9 \
		-text {Java Class:}

	entry $base.javaclass \
		-textvariable "aim_srvstart($root,javaclass)"

	button $base.button#7 \
		-command "ss_get_open_file $root javaclass {{\"Java Class\" .class}}" \
		-padx 3 \
		-text Browse...
	catch {
		$base.button#7 configure \
			-font -*-Helvetica-Bold-R-Normal-*-*-120-*-*-*-*-*-*
	}

	label $base.label#5 \
		-text {Log Volumes:}

	scale $base.logvol \
		-orient h \
		-to 9.0 \
		-variable "aim_srvstart($root,logvol)"

	label $base.label#6 \
		-text {Log Sizes(KB):}

	scale $base.logsize \
		-bigincrement 32.0 \
		-orient h \
		-to 2000.0 \
		-variable "aim_srvstart($root,logsize)"

	label $base.label#10 \
		-text {Cmd-line Cmds:}

	entry $base.cmdlinecmds \
		-textvariable "aim_srvstart($root,cmdlinecmds)"

	label $base.label#11 \
		-text {(Must quote whitespace)}

	button $base.button#4 \
		-command "ss_save_and_start $root" \
		-text {Start Server}
	catch {
		$base.button#4 configure \
			-font -*-Helvetica-Bold-R-Normal-*-*-120-*-*-*-*-*-*
	}

	button $base.button#12 \
		-command "clear_srv_data $root" \
		-highlightthickness 2 \
		-padx 10 \
		-pady 3 \
		-text Clear
	catch {
		$base.button#12 configure \
			-font -*-Helvetica-Bold-R-Normal-*-*-120-*-*-*-*-*-*
	}

	button $base.button#5 \
		-command "destroy $root" \
		-text Cancel
	catch {
		$base.button#5 configure \
			-font -*-Helvetica-Bold-R-Normal-*-*-120-*-*-*-*-*-*
	}


	# Geometry management

	grid $base.dropframe -in $root	-row 1 -column 2  \
		-sticky w
	grid $base.label#2 -in $root	-row 1 -column 1  \
		-sticky e
	grid $base.label#7 -in $root	-row 2 -column 1  \
		-sticky e
	grid $base.username -in $root	-row 2 -column 2  \
		-sticky nesw
	grid $base.label#8 -in $root	-row 3 -column 1 
	grid $base.workdir -in $root	-row 3 -column 2  \
		-sticky nesw
	grid $base.button#11 -in $root	-row 3 -column 3 
	grid $base.label#1 -in $root	-row 4 -column 1  \
		-sticky e
	grid $base.executable -in $root	-row 4 -column 2  \
		-sticky nesw
	grid $base.button#1 -in $root	-row 4 -column 3 
	grid $base.label#3 -in $root	-row 5 -column 1  \
		-sticky e
	grid $base.startup -in $root	-row 5 -column 2  \
		-sticky nesw
	grid $base.button#3 -in $root	-row 5 -column 3 
	grid $base.button#9 -in $root	-row 5 -column 4 
	grid $base.label#4 -in $root	-row 6 -column 1  \
		-sticky e
	grid $base.tclstartup -in $root	-row 6 -column 2  \
		-sticky nesw
	grid $base.button#2 -in $root	-row 6 -column 3 
	grid $base.button#10 -in $root	-row 6 -column 4 
	grid $base.label#9 -in $root	-row 7 -column 1  \
		-sticky e
	grid $base.javaclass -in $root	-row 7 -column 2  \
		-sticky nesw
	grid $base.button#7 -in $root	-row 7 -column 3 
	grid $base.label#5 -in $root	-row 8 -column 1  \
		-sticky e
	grid $base.logvol -in $root	-row 8 -column 2  \
		-sticky ew
	grid $base.label#6 -in $root	-row 9 -column 1  \
		-sticky e
	grid $base.logsize -in $root	-row 9 -column 2  \
		-sticky ew
	grid $base.label#10 -in $root	-row 10 -column 1  \
		-sticky e
	grid $base.cmdlinecmds -in $root	-row 10 -column 2  \
		-sticky nesw
	grid $base.label#11 -in $root	-row 10 -column 3  \
		-columnspan 2
	grid $base.button#4 -in $root	-row 11 -column 1 
	grid $base.button#12 -in $root	-row 11 -column 2 
	grid $base.button#5 -in $root	-row 11 -column 3  \
		-columnspan 2

	# Resize behavior management

	grid rowconfigure $root 1 -weight 0 -minsize 15
	grid rowconfigure $root 2 -weight 0 -minsize 15
	grid rowconfigure $root 3 -weight 0 -minsize 15
	grid rowconfigure $root 4 -weight 0 -minsize 15
	grid rowconfigure $root 5 -weight 0 -minsize 15
	grid rowconfigure $root 6 -weight 0 -minsize 15
	grid rowconfigure $root 7 -weight 0 -minsize 15
	grid rowconfigure $root 8 -weight 0 -minsize 15
	grid rowconfigure $root 9 -weight 0 -minsize 15
	grid rowconfigure $root 10 -weight 0 -minsize 30
	grid rowconfigure $root 11 -weight 0 -minsize 15
	grid columnconfigure $root 1 -weight 0 -minsize 15
	grid columnconfigure $root 2 -weight 1 -minsize 15
	grid columnconfigure $root 3 -weight 0 -minsize 18
	grid columnconfigure $root 4 -weight 0 -minsize 15
# additional interface code
global env; source $env(ASTK_DIR)/startsrv.code.tcl

# end additional interface code

}


# Allow interface to be run "stand-alone" for testing

catch {
    if [info exists embed_args] {
	# we are running in the plugin
	startsrv_ui .
    } else {
	# we are running in stand-alone mode
	if {$argv0 == [info script]} {
	    wm title . "Testing startsrv_ui"
	    startsrv_ui .
	}
    }
}
